//dynamic route is identified with brackets around the page name
import Head from 'next/head'
import React, {useState, useEffect, use} from 'react'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { getSession } from 'next-auth/react'

interface GenreProps {
  genre: Array<string>
}

export default function Genre(props: GenreProps) {
  const { genre } = props
  

  return (
    <div >
      <Head>
        <title>MusicMe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
          <h1>{genre}</h1>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}

// export async function getServerSideProps(context: any) {
//   const session = await getSession(context)
//   console.log("session in index fjlskdjfks: ", session)
//   return {
//     props: {
//       session,
//     }
//   }
// }

// export async function getStaticPaths(props: any){
//   const { session } = props
//   console.log("&*&#*$&*(&*E&*#&$*&$*")
//   console.log(session)
//   const data = await fetch("https://api.spotify.com/v1/recommendations/available-genre-seeds", {
//     headers:{
//       Authorization: `Bearer ${session?.user?.accessToken}`
//     }
//   }).then(response => response.json()).then(d => console.log("data is: ", d));
  
//   const genrePaths = data.genres.map((genre: string) => { return {params: { genre }}})

//   return {
//     params: {
//       paths: genrePaths,
//       callback: false,
//     }
//   }

// }
 
// export async function getStaticProps(props: any) {
//   const  { params } = props
//   console.log('AAAAAAAAAAAHHHHHHHHHHHHHHH')
  
//   return {
//     props: {
//       genre: params.genre
//     }
//   }

// }