import Head from 'next/head'
import React, {useState, useEffect, use} from 'react'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Credentials } from '../Credentials';

interface HomeProps {
  genres: Array<string>
}

export default function Home(props: HomeProps) {
  const { genres } = props
  const [query, setQuery] = useState('')
  const spotify = Credentials()
  console.log(genres)

 
 function searchRequest(e) {
    e.preventDefault()
    const q = 'https://api.spotify.com/v1/search' + '?q=' + query + '&type=track'
    const data = fetch(q, {
      headers:{
        Authorization: `Bearer ${spotify.OAuth_Token}`
      }
    }).then(response => response.json())
    .then(data => console.log(data));    
  }

  

  return (
    <div >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
       {/* <div>{
          genres.map((genre, key) => <li key={key}>{genre}</li>)
        }</div> */}
        <form>
          <label style={{margin: '15px'}}>Search Artist</label>
          <input style={{margin: '15px'}} onChange={(e) => setQuery(e.target.value)}/>
          <input style={{margin: '15px'}} type="submit" onClick={(e) => searchRequest(e)}/>
        </form>
        {/* {console.log(query)} */}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}


export async function getStaticProps() {
  const spotify = Credentials()


  const data = await fetch("https://api.spotify.com/v1/recommendations/available-genre-seeds", {
    headers:{
      Authorization: `Bearer ${spotify.OAuth_Token}`
    }
  }).then(response => response.json());

  console.log(data);
  
  return {
    props: {
      genres: data.genres
    }
  }

}