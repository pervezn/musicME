import Head from 'next/head'
import React, {useState, useEffect} from 'react'
import Image from 'next/image'
import { SearchContent, RecommendationSeed } from "spotify-types";
import {signOut, useSession, getSession } from 'next-auth/react'
import useSpotify from '../hooks/useSpotify'
import { useRecoilState } from 'recoil'
import { topTrackState } from '../atoms/topTracksAtom'
import { topArtistState } from '../atoms/topArtistsAtom'
import SideBar from '../components/SideBar'
import MainContent from '../components/MainContent'
// import type { TrackSearchResponse } from "/spotify-api" 

interface HomeProps {
  genres: Array<string>
}


export default function Home(props: HomeProps) {
  const { data: session, status} = useSession()
  const spotifyApi = useSpotify();
  const [query, setQuery] = useState('')
  const [topArtists, setTopArtists] = useRecoilState<any | undefined>(topArtistState)
  const [topTracks, setTopTracks] = useRecoilState<any | undefined>(topTrackState)

  // console.log("session in index: ", session)


 useEffect(() => {
  if(spotifyApi.getAccessToken()){
    /* Get a User’s Top Artists*/
    spotifyApi.getMyTopArtists()
      .then(function(data:any) {
        console.log(data.body.items);
        setTopArtists(data.body.items)
      }, function(err: any) {
        console.log('Something went wrong!', err);
      });

    /* Get a User’s Top Tracks*/
    spotifyApi.getMyTopTracks()
    .then(function(data: any) {
      // console.log(data.body.items);
      setTopTracks(data.body.items)
    }, function(err: any) {
      console.log('Something went wrong!', err);
    });
  }
 }, [session, spotifyApi])

// console.log("topTracks ", topTracks)
 

  return (
    <div >
      <Head>
        <title>MusicMe</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <div className='bg-black h-screen overflow-hidden'>
        <main className='flex '>
          <SideBar />
          <MainContent topTracks={topTracks}/>
        </main>
      </div>
      
      

   
    </div>
  )
}


export async function getServerSideProps(context: any) {
    const session = await getSession(context)

    return {
      props: {
        session,
      }
    }
}


// export async function getStaticProps() {
//   const data = await fetch("https://api.spotify.com/v1/recommendations/available-genre-seeds", {
//     headers:{
//       Authorization: `Bearer ${process.env.OAUTH_TOKEN}`
//     }
//   }).then(response => response.json());

//   console.log(data);
  
//   return {
//     props: {
//       genres: data.genres
//     }
//   }

// }